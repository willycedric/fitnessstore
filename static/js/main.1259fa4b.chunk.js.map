{"version":3,"sources":["logo.png","components/Card.js","components/Home.js","components/Vitamin.js","components/Navigation.js","components/ProductDetails.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","props","react_default","a","createElement","className","card","animation","Link","to","concat","id","src","alt","title","price","description","Home","cards","map","src_components_Card","duration","key","Vitamin","Navigation","href","onClick","closeNav","ProductDetails","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","toggleLogo","bind","assertThisInitialized","openNav","event","setState","prevState","document","getElementById","style","width","data","_this2","BrowserRouter","logo","onMouseEnter","onMouseLeave","src_components_Navigation","Switch","Route","exact","path","render","components_Home","component","location","pathname","replace","components_ProductDetails","Component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_App_0","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1259fa4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a68903b3.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Card.css';\n\nconst Card = (props) => (\n\n    <div className={props.card.animation}>\n      <Link to={`/product/${props.card.id}`} className=\"item\">\n      <div className=\"front\">\n        <img src=\"https://sc01.alicdn.com/kf/HTB1TRGgisnI8KJjSsziq6z8QpXaL/2017-hot-sell-plastic-juice-bottle-PET.jpg\" alt=\"Avatar\" className=\"card-image\" />\n        <div className=\"container\">\n          <h3>{props.card.title}</h3>\n          <h3><span className=\"price\"> ${props.card.price}</span></h3>\n          <p>{props.card.description}</p>\n        </div>\n      </div>\n      </Link>\n    </div>\n\n);\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nconst Home = (props) => {\n  return (<div className=\"Grid animated bounceInUp\">\n    {\n      props.cards.map((card) => (\n        <Card\n          duration={150}\n          key={card.id}\n          card={card}\n        />\n      ))\n    }\n  </div>);\n}\n\nexport default Home;\n\n","import React from 'react';\nconst Vitamin = (props) => {\n    return ( <h1>Vitamin Page</h1> );\n}\n \nexport default Vitamin;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css';\n\nconst Navigation = (props) => (\n  <div id=\"myNav\" className=\"overlay\">\n    <a href=\"#\" className=\"closebtn\" onClick={() => props.closeNav()}>&times;</a>\n    <div className=\"overlay-content\">\n      <Link to=\"/\" onClick={() => props.closeNav()}>Home</Link>  \n      <Link to=\"/vitamin\" onClick={() => props.closeNav()}>Vitamin Juice</Link>       \n      <a href=\"#\">Clothing</a>\n      <a href=\"#\">Supplements</a>\n      <a href=\"#\">Contact</a>\n    </div>\n  </div>\n);\n\nexport default Navigation;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nconst ProductDetails = (props) => {\n    return (\n    <div>\n        <div>\n        <Link className=\"back_button\" to=\"/\">Back</Link>\n        </div>        \n        <div className={props.card.animation}>\n        <div className=\"front\">\n            <img src=\"https://sc01.alicdn.com/kf/HTB1TRGgisnI8KJjSsziq6z8QpXaL/2017-hot-sell-plastic-juice-bottle-PET.jpg\" alt=\"Avatar\" className=\"card-image\" />\n            <div className=\"container\">\n                <h3>{props.card.title}</h3>\n                <h3><span className=\"price\"> ${props.card.price}</span></h3>\n                <p>{props.card.description}</p>\n            </div>\n        </div>\n    </div>\n    </div>\n   );\n}\n\nexport default ProductDetails;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport logo from './logo.png';\nimport './App.css';\nimport Home from './components/Home';\nimport Vitamin from './components/Vitamin';\nimport Navigation from './components/Navigation';\nimport ProductDetails from './components/ProductDetails';\nimport data from './data/data.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleLogo: true,\n      cards:[],\n    }\n    this.toggleLogo = this.toggleLogo.bind(this);\n    this.openNav = this.openNav.bind(this);\n    this.closeNav = this.closeNav.bind(this);\n  }\n\n  toggleLogo(event) {\n    this.setState((prevState) => ({\n      toggleLogo: !prevState.toggleLogo\n    }));\n  }\n\n  openNav() {\n    document.getElementById(\"myNav\").style.width = \"100%\";\n  }\n\n  closeNav() {\n    document.getElementById(\"myNav\").style.width = \"0%\";\n  }\n  //WARNING! To be deprecated in React v17. Use componentDidMount instead.\n  componentWillMount() {\n    this.setState(()=>{\n      return {cards:data}\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo}\n              className={this.state.toggleLogo ? 'static-logo' : 'static-logo animated jello'}\n              alt=\"logo\"\n              onMouseEnter={this.toggleLogo}\n              onMouseLeave={this.toggleLogo}\n              onClick={this.openNav}\n            />\n            <h1\n              className={this.state.toggleLogo ? 'menu-hidden' : 'menu animated bounceInDown'}\n              onClick={this.openNav}\n            >Menu</h1>\n            <Navigation closeNav={this.closeNav} />\n          </header>\n          <Switch>\n            <Route exact path=\"/\" render={()=>(\n              <Home cards={this.state.cards} />\n            )}/>\n            <Route exact path=\"/vitamin\" component={Vitamin}/>\n            <Route exact path=\"/product/:id\" render={(props)=>{\n                let id = props.location.pathname.replace('/product/','');               \n               return  <ProductDetails card={this.state.cards[id]} />\n            }}\n            />\n          </Switch>         \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}